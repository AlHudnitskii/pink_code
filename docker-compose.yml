services:
  redis:
    image: redis:latest
    ports:
      - "6380:6379"
    networks:
      leetcode_network:

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=pink_code
      - POSTGRES_PASSWORD=pink_code
      - POSTGRES_DB=pink_code
    ports:
      - "5432:5432"
    networks:
      leetcode_network:

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    networks:
      - leetcode_network
      - frontend_network
    environment:
      FRONTEND_URL: http://frontend:3001

  frontend:
    image: nginx:latest
    ports:
      - "3001:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - web
    networks:
      - frontend_network
    environment:
      BACKEND_API_URL: http://web:8000

  celery:
    build: .
    command: celery -A core.pink_code worker -P solo --loglevel=info
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
      - web
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
    networks:
      leetcode_network:

  celery-beat:
    build: .
    command: celery -A core.pink_code beat --loglevel=info
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
    networks:
      leetcode_network:

networks:
  leetcode_network:
    name: leetcode_network
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
  frontend_network:
    name: frontend_network
    ipam:
      driver: default
      config:
        - subnet: 192.168.20.0/24

volumes:
  postgres_data: